<Activity mc:Ignorable="sap sap2010" x:Class="ProcessPDF_EMP_Wages" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_ClaimNo" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1608,4501</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessPDF_EMP_Wages_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="68">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ProcessPDF_EMP_Wages" sap:VirtualizedContainerService.HintSize="1618,4436" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:GenericValue" Name="Text" />
      <Variable x:TypeArguments="ui:Window" Name="WndwActive" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Initialization" sap:VirtualizedContainerService.HintSize="1576,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;OneSpan Library - Starting ProcessPDF-EMP-Wages.xaml&quot;]" />
    <ui:WindowScope SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" ApplicationWindow="[WndwActive]" DisplayName="Attach Window 'acrord32.exe 99-8877665...'" sap:VirtualizedContainerService.HintSize="1576,4213" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="cd2629bb4722b19f314d69a91f71841c" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' /&gt;">
      <ui:WindowScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1542,4067" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ShowWindow DisplayName="Show Window" sap:VirtualizedContainerService.HintSize="1500,22" sap2010:WorkflowViewState.IdRef="ShowWindow_1" Window="[WndwActive]" />
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1500,305" sap2010:WorkflowViewState.IdRef="CommentOut_7">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="280,227" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="BringToForeground">
                    <InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="ui:Window">[WndwActive]</InArgument>
                    </InvokeMethod.TargetObject>
                  </InvokeMethod>
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:MaximizeWindow DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="1500,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" Window="[WndwActive]" />
            <Sequence DisplayName="Screen Scraping" sap:VirtualizedContainerService.HintSize="1500,3506" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:Window" Name="PDFwindow" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" ApplicationWindow="[PDFwindow]" ContinueOnError="True" DisplayName="Scrape from PDF" sap:VirtualizedContainerService.HintSize="1458,3414" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="42c70862dfe37dc6b7e8d971305f4bc4" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' omit:title='RPA - Wages-IW.pdf (SECURED) - Adobe Acrobat Reader DC (32-bit)' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:Annotation.AnnotationText="Must go to the second page to find the Claim Number." DisplayName="Do" sap:VirtualizedContainerService.HintSize="1424,3268" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch sap2010:Annotation.AnnotationText="Try to find a Claim Number, if non exists it will default to 00-000000, then finally rename it." DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1382,3145" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence sap:VirtualizedContainerService.HintSize="1344,2887" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Boolean" Name="isBannerShowing" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="1302,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Make sure there's no popup showing, if so click OK." DisplayName="Check for AdobePopup" sap:VirtualizedContainerService.HintSize="1302,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="AdobePopup.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="1302,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SpecialKey="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Zoom to correct size for viewing." ContinueOnError="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="1302,147" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="1" KeyModifiers="Ctrl" SendWindowMessages="True">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="9b1953c3-8bd6-4edc-80e3-20c9a1595e2d">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:SendHotkey>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1302,51" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:UiElementExists DisplayName="Element Exists 'push button'" Exists="[isBannerShowing]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                                    <ui:UiElementExists.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7ec61422-12d4-49f4-97b1-e3430bdf29ce" InformativeScreenshot="f5e8ec577c1f093623f776b365f29686" Selector="&lt;wnd cls='AVL_AVView' idx='3' title='AVFlipContainerView' /&gt;&lt;ctrl name='Signed and all signatures**' role='grouping' /&gt;&lt;ctrl name='AVToolBarView' role='tool bar' /&gt;&lt;ctrl name='Highlight Existing Fields' role='push button' /&gt;" TimeoutMS="1000" WaitForReady="INTERACTIVE" />
                                    </ui:UiElementExists.Target>
                                  </ui:UiElementExists>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1302,51" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="526,345" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[isBannerShowing]" sap:VirtualizedContainerService.HintSize="484,253" sap2010:WorkflowViewState.IdRef="If_1">
                                    <If.Then>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'graphic Signed'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="26215c52-e9f8-4679-9e34-714dc731d9ea" InformativeScreenshot="89579a042c140c9a76e391b6ddafe07e" Selector="&lt;wnd cls='AVL_AVView' idx='3' title='AVFlipContainerView' /&gt;&lt;ctrl name='Signed and all signatures are valid.  Please fill out the follow*' role='grouping' /&gt;&lt;ctrl name='Signed and all signatures are valid.  Please fill out the follow*' role='graphic' /&gt;">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:Click.Target>
                                      </ui:Click>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Make sure there's no popup showing, if so click OK." DisplayName="Check for AdobePopup " sap:VirtualizedContainerService.HintSize="1302,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="AdobePopup.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="1302,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SpecialKey="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Zoom to correct size for viewing." ContinueOnError="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="1302,147" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="1" KeyModifiers="Ctrl" SendWindowMessages="True">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="9b1953c3-8bd6-4edc-80e3-20c9a1595e2d">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:SendHotkey>
                            <Sequence sap:VirtualizedContainerService.HintSize="1302,1687" sap2010:WorkflowViewState.IdRef="Sequence_2">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="RawClaimNo" />
                                <Variable x:TypeArguments="x:String" Name="CleanClaimNo" />
                                <Variable x:TypeArguments="x:String" Name="OverrideClaim" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1260,51" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="768,444" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AnchorBase AnchorPosition="Top" DisplayName="Anchor Base" sap:VirtualizedContainerService.HintSize="384,352" sap2010:WorkflowViewState.IdRef="AnchorBase_1">
                                      <ui:AnchorBase.Action>
                                        <ActivityAction x:TypeArguments="ui:Anchor">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                                          </ActivityAction.Argument>
                                          <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'text  Claim number'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_1">
                                            <ui:GetValue.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="91f9614a-d0db-4c92-8eb4-b1751f96727d" InformativeScreenshot="e3b5f0e3cf92f92ce599ddc19e68f9c3" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&#xA;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&#xA;&lt;ctrl name='Claim number' role='text' /&gt;&#xA;">
                                                <ui:Target.TimeoutMS>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:Target.TimeoutMS>
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:GetValue.Target>
                                            <ui:GetValue.Value>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[Text]</OutArgument>
                                            </ui:GetValue.Value>
                                          </ui:GetValue>
                                        </ActivityAction>
                                      </ui:AnchorBase.Action>
                                      <ui:AnchorBase.AnchorProvider>
                                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text  Claim number'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1">
                                          <ui:WaitUiElementAppear.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="79ba53a8-d61c-4865-b376-a087f3640df2" InformativeScreenshot="6b0799e73d4b57fd9876c35d29e51eff" Selector="&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl name='Claim number ' role='text' /&gt;">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                              <ui:Target.WaitForReady>
                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                              </ui:Target.WaitForReady>
                                            </ui:Target>
                                          </ui:WaitUiElementAppear.Target>
                                        </ui:WaitUiElementAppear>
                                      </ui:AnchorBase.AnchorProvider>
                                    </ui:AnchorBase>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1260,51" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:GetVisibleText FormattedText="{x:Null}" WordsInfo="{x:Null}" DisplayName="Get Visible Text 'text  Claim number'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetVisibleText_1">
                                      <ui:GetVisibleText.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d8f23d57-e58b-4440-aafb-34abb0a5130c" InformativeScreenshot="35889e020f783124c7c38a95927b2b73" Selector="&lt;wnd aaname='Document Pane' omit:cls='AVL_AVView' omit:title='AVScrolledPageView' /&gt;&lt;wnd omit:cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='row' idx='5' /&gt;&lt;ctrl name='Claim number ' role='text' /&gt;&lt;nav up='1' /&gt;&lt;ctrl name='Claim number' role='text' /&gt;" TimeoutMS="2000" WaitForReady="COMPLETE" />
                                      </ui:GetVisibleText.Target>
                                      <ui:GetVisibleText.Text>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[Text]</OutArgument>
                                      </ui:GetVisibleText.Text>
                                    </ui:GetVisibleText>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Off (Default) = Do normal Claim # Search&#xA;Blank = Simulate unable to locate Claim #&#xA;Wrong = Simulate finding the wrong Claim #" AssetName="OverrideClaim" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="1260,194" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                                <ui:GetRobotAsset.Value>
                                  <OutArgument x:TypeArguments="x:String">[OverrideClaim]</OutArgument>
                                </ui:GetRobotAsset.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:GetRobotAsset>
                              <If Condition="[OverrideClaim.ToUpper = &quot;BLANK&quot;]" sap:VirtualizedContainerService.HintSize="1260,1088" sap2010:WorkflowViewState.IdRef="If_3">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[out_ClaimNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">00-000000</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DebugSendMsg workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="DebugSendMsg.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_DebugMsg">
                                          <Literal x:TypeArguments="x:String">SIMULATING Missing Claim Number</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_DebugWorkflow">
                                          <Literal x:TypeArguments="x:String">ProcessPDF-EMP-Wwages</Literal>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="839,941" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[OverrideClaim.ToUpper = &quot;WRONG&quot;]" sap:VirtualizedContainerService.HintSize="797,849" sap2010:WorkflowViewState.IdRef="If_2">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[out_ClaimNo]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">99-999999</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DebugSendMsg workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="DebugSendMsg.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DebugMsg">
                                                <Literal x:TypeArguments="x:String">SIMULATING Incorrect Claim Number</Literal>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DebugWorkflow">
                                                <Literal x:TypeArguments="x:String">ProcessPDF-EMP-Wwages</Literal>
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,702" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:GetValue ContinueOnError="True" DisplayName="Get Text 'client'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_2">
                                            <ui:GetValue.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="89990aa4-6a54-4b5d-8206-d3addec9d467" InformativeScreenshot="e0a3eb783a4e49eeac71cd4f8691418b" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' omit:title='05-050505 RPA - Emp Wage Form.pdf (SECURED) - Adobe Acrobat Read*' /&gt;&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl name='Claim number ' role='text' /&gt;&lt;nav up='1' /&gt;&lt;ctrl name='*-*' role='text' /&gt;" TimeoutMS="2000" WaitForReady="INTERACTIVE" />
                                            </ui:GetValue.Target>
                                            <ui:GetValue.Value>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[Text]</OutArgument>
                                            </ui:GetValue.Value>
                                          </ui:GetValue>
                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[RawClaimNo]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[Split(Text.Replace("- ", "-").Replace(" -", "-"), " ").Last.Replace(" ","")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CleanClaimNo workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="CleanClaimNo.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_RawClaimNo">[RawClaimNo]</InArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_CleanClaimNo">[CleanClaimNo]</OutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[out_ClaimNo]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[CleanClaimNo]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DebugSendMsg workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="DebugSendMsg.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DebugMsg">
                                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Found and Cleaned Claim Number &quot; + out_ClaimNo" />
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DebugWorkflow">
                                                <Literal x:TypeArguments="x:String">ProcessPDF-EMP-Wwages</Literal>
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1260,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[out_ClaimNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Text.Replace(" ","").Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                            </Sequence>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1348,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,396" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_ClaimNo]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">00-000000</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DebugSendMsg workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="DebugSendMsg.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_DebugMsg" xml:space="preserve">["Catch:  Unable to find Claim #, assigning 00-000000 --&gt; " + exception.Source.ToString + ": " + exception.Message.ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_DebugWorkflow">ProcessPDF-EMP-Wwages</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:WindowScope.Body>
    </ui:WindowScope>
  </Sequence>
</Activity>